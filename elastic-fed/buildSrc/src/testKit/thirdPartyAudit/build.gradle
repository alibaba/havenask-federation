/* 
*Copyright (c) 2021, Alibaba Group;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*
* Modifications Copyright Havenask Contributors. See
* GitHub history for details.
*/

import org.havenask.gradle.precommit.ThirdPartyAuditPrecommitPlugin
import org.havenask.gradle.precommit.ThirdPartyAuditTask


plugins {
  id 'java'
  // bring in build-tools onto the classpath
  id 'havenask.global-build-info'
}

plugins.apply(ThirdPartyAuditPrecommitPlugin)

repositories {
  /**
   * Local test repo contains dummy jars with different group names and versions.
   *   - broken-log4j creates a log4j logger but has no pom, so the class will be missing
   *   - dummy-io has a class that creates a new java.io.File ( something which third-party-audit-absurd.txt forbids )
   *   - version 0.0.2 has the same class and one extra file just to make the jar different
   *   - used for propagating jar containing jdkjarhell jar from integ test runtime classpath
   */
  maven {
    name = "local-test"
    url = file("sample_jars/build/testrepo")
    metadataSources {
      artifact()
    }
  }
  jcenter()
}

dependencies {
  forbiddenApisCliJar 'de.thetaphi:forbiddenapis:2.7'
  jdkJarHell 'org.havenask:havenask-core:current'
  compileOnly "org.${project.properties.compileOnlyGroup}:${project.properties.compileOnlyVersion}"
  implementation "org.${project.properties.compileGroup}:${project.properties.compileVersion}"
}

tasks.register("empty", ThirdPartyAuditTask) {
  targetCompatibility = JavaVersion.VERSION_11
  signatureFile = file('third-party-audit-empty.txt')
}

tasks.register("absurd", ThirdPartyAuditTask) {
  targetCompatibility = JavaVersion.VERSION_11
  signatureFile = file('third-party-audit-absurd.txt')
}
