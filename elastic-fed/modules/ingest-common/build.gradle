/*
*Copyright (c) 2021, Alibaba Group;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*
* Modifications Copyright Havenask Contributors. See
* GitHub history for details.
*/

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'havenask.yaml-rest-test'
apply plugin: 'havenask.internal-cluster-test'

havenaskplugin {
  description 'Module for ingest processors that do not require additional security permissions or have large dependencies and resources'
  classname 'org.havenask.ingest.common.IngestCommonPlugin'
  extendedPlugins = ['lang-painless']
}

dependencies {
  compileOnly project(':modules:lang-painless')
  api project(':libs:havenask-grok')
  api project(':libs:havenask-dissect')
}

restResources {
  restApi {
    includeCore '_common', 'ingest', 'cluster', 'indices', 'index', 'bulk', 'nodes', 'get', 'update', 'cat', 'mget'
  }
}

testClusters.all {
  // Needed in order to test ingest pipeline templating:
  // (this is because the integTest node is not using default distribution, but only the minimal number of required modules)
  module ':modules:lang-mustache'
}

thirdPartyAudit.ignoreMissingClasses(
  // from log4j
  'org.osgi.framework.AdaptPermission',
  'org.osgi.framework.AdminPermission',
  'org.osgi.framework.Bundle',
  'org.osgi.framework.BundleActivator',
  'org.osgi.framework.BundleContext',
  'org.osgi.framework.BundleEvent',
  'org.osgi.framework.SynchronousBundleListener',
  'org.osgi.framework.wiring.BundleWire',
  'org.osgi.framework.wiring.BundleWiring'
)
